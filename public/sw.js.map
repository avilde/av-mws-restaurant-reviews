{"version":3,"sources":["sw.js"],"names":["CACHE_NAME","cachedFiles","self","addEventListener","event","waitUntil","caches","open","then","cache","addAll","keys","cacheNames","Promise","all","filter","name","startsWith","map","delete","respondWith","match","request","resp","fetch","put","clone"],"mappings":"AAAA,MAAMA,WAAa,iBACjBC,aACE,cACA,mBACA,2BACA,8BACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,eACA,uBACA,uBACA,uBACA,wBACA,wBACA,wBACA,yBACA,4BACA,SACA,iBACA,gBAGJC,KAAKC,iBAAiB,UAAWC,IAC/BA,EAAMC,UACJC,OAAOC,KAAKP,YAAYQ,KAAKC,GACpBA,EAAMC,OAAOT,iBAK1BC,KAAKC,iBAAiB,WAAYC,IAChCA,EAAMC,UACJC,OAAOK,OAAOH,KAAKI,GACVC,QAAQC,IACbF,EACGG,OAAOC,GACCA,EAAKC,WAAW,WAAaD,IAAShB,YAE9CkB,IAAIF,GACIV,OAAOa,OAAOH,SAOjCd,KAAKC,iBAAiB,QAASC,IAC7BA,EAAMgB,YACJd,OAAOC,KAAKP,YAAYQ,KAAKC,GACpBA,EAAMY,MAAMjB,EAAMkB,SAASd,KAAKe,GAEnCA,GACAC,MAAMpB,EAAMkB,SAASd,KAAKe,IACxBd,EAAMgB,IAAIrB,EAAMkB,QAASC,EAAKG,SACvBH","file":"sw.js","sourcesContent":["const CACHE_NAME = 'av-rr-static-1',\r\n  cachedFiles = [\r\n    '/index.html',\r\n    '/restaurant.html',\r\n    '/css/restaurant_list.css',\r\n    '/css/restaurant_details.css',\r\n    '/img/1.webp',\r\n    '/img/2.webp',\r\n    '/img/3.webp',\r\n    '/img/4.webp',\r\n    '/img/5.webp',\r\n    '/img/6.webp',\r\n    '/img/7.webp',\r\n    '/img/8.webp',\r\n    '/img/9.webp',\r\n    '/img/10.webp',\r\n    '/img/app-logo16.webp',\r\n    '/img/app-logo48.webp',\r\n    '/img/app-logo64.webp',\r\n    '/img/app-logo128.webp',\r\n    '/img/app-logo256.webp',\r\n    '/img/app-logo512.webp',\r\n    '/js/restaurant_list.js',\r\n    '/js/restaurant_details.js',\r\n    '/sw.js',\r\n    '/manifest.json',\r\n    '/favicon.ico'\r\n  ];\r\n\r\nself.addEventListener('install', event => {\r\n  event.waitUntil(\r\n    caches.open(CACHE_NAME).then(cache => {\r\n      return cache.addAll(cachedFiles);\r\n    })\r\n  );\r\n});\r\n\r\nself.addEventListener('activate', event => {\r\n  event.waitUntil(\r\n    caches.keys().then(cacheNames => {\r\n      return Promise.all(\r\n        cacheNames\r\n          .filter(name => {\r\n            return name.startsWith('av-rr-') && name !== CACHE_NAME;\r\n          })\r\n          .map(name => {\r\n            return caches.delete(name);\r\n          })\r\n      );\r\n    })\r\n  );\r\n});\r\n\r\nself.addEventListener('fetch', event => {\r\n  event.respondWith(\r\n    caches.open(CACHE_NAME).then(cache => {\r\n      return cache.match(event.request).then(resp => {\r\n        return (\r\n          resp ||\r\n          fetch(event.request).then(resp => {\r\n            cache.put(event.request, resp.clone());\r\n            return resp;\r\n          })\r\n        );\r\n      });\r\n    })\r\n  );\r\n});\r\n"],"sourceRoot":"/source/"}